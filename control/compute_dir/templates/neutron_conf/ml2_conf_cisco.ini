[ml2_cisco]

# (StrOpt) A short prefix to prepend to the VLAN number when creating a
# VLAN interface. For example, if an interface is being created for
# VLAN 2001 it will be named 'q-2001' using the default prefix.
# The total length allowed for the prefix name and VLAN is 32 characters,
# the prefix will be truncated if the total length is greater than 32.
#
# vlan_name_prefix = q-
# Example: vlan_name_prefix = vnet-

# (BoolOpt) A flag to enable round robin scheduling of routers for SVI.
# svi_round_robin = False

# (BoolOpt) A flag to enable strict hostkey checks when connecting to
# Nexus switches. Defaults to False (No hostkey checks)
# This will be deprecated along with nexus_driver since this is
# associated to the ncclient driver which is going away.
# host_key_checks = False

# (ListOp) A choice of driver methods to configure Nexus devices.
# The default choice has changed to 'restapi' which replaces the
# original 'ncclient' driver.  The RESTAPI driver has better
# performance with less Nexus session limits.  Additionally,
# new feature development is applied only to restapi driver.
# Plans are to remove ncclient driver in Cisco 7.0.0 release.
# To use the restapi driver, the Nexus 9K image version must be
# 7.0(3)I5(2) or greater.  For short term, the original driver can be
# used by setting the nexus_driver to 'ncclient'.  The default is
# set to:
# nexus_driver = restapi

#
# (StrOpt) The name of the physical_network managed via the Cisco Nexus Switch.
# This string value must be present in the ml2_conf.ini network_vlan_ranges
# variable.
#
# managed_physical_network =
# Example: managed_physical_network = physnet1

# Cisco Nexus Switch configurations.
# Each switch to be managed by OpenStack Neutron must be configured here.
#
# Cisco Nexus Switch Format.
# [ml2_mech_cisco_nexus:<IP address of switch>]
# <hostname>=<intf_type:port>       (1)
# ssh_port=<ssh port>               (2)
# username=<credential username>    (3)
# password=<credential password>    (4)
# nve_src_intf=<loopback number>    (5)
# physnet=<physical network>        (6)
# vpc_pool=<start,end>              (7)
#
# (1) For each host connected to a port on the switch, specify the hostname
#     and the Nexus physical port (interface) it is connected to.
#     Valid intf_type's are 'ethernet' and 'port-channel'.
#     The default setting for <intf_type:> is 'ethernet' and need not be
#     added to this setting.
# (2) The TCP port for connecting via SSH to manage the switch. This is
#     port number 22 unless the switch has been configured otherwise.
# (3) The username for logging into the switch to manage it.
# (4) The password for logging into the switch to manage it.
# (5) Only valid if VXLAN overlay is configured and vxlan_global_config is
#     set to True.
#     The NVE source interface is a loopback interface that is configured on
#     the switch with valid /32 IP address. This /32 IP address must be known
#     by the transient devices in the transport network and the remote VTEPs.
#     This is accomplished by advertising it through a dynamic routing protocol
#     in the transport network. (NB: If no nve_src_intf is defined then a
#     default setting of 0 (creates "loopback0") will be used.)
# (6) Only valid if VXLAN overlay is configured.
#     The physical network name defined in the network_vlan_ranges variable
#     (defined under the ml2_type_vlan section) that this switch is controlling.
#     The configured 'physnet' is the physical network domain that is connected
#     to this switch. The vlan ranges defined in network_vlan_ranges for a
#     a physical network are allocated dynamically and are unique per physical
#     network. These dynamic vlans may be reused across physical networks.
# (7) VPC pool is valid for Baremetal configurations.
#     When there is a list of ethernet interfaces provided by Ironic to neutron
#     in a port binding transaction, these are assumed to be port-channel type
#     configurations.  Ironic only learns ethernet interfaces so it is up to
#     the Nexus ML2 Driver to either learn the port channel if the channel-group
#     is already applied to the ethernet interfaces OR create a new port-channel
#     and apply the channel-group to the ethernet interface.  This pool is the 
#     reserved port-channel IDs available for allocation by the Nexus ML2 driver
#     for each switch.  Existing port-channel interfaces preconfigured on
#     ethernet interfaces in use will be reused by the driver.
#
# Example:
# [ml2_mech_cisco_nexus:1.1.1.1]
# compute1=1/1
# compute2=ethernet:1/2
# compute3=port-channel:1
# ssh_port=22
# username=admin
# password=mySecretPassword
# nve_src_intf=1
# physnet=physnet1
# vpc_pool=1001,1025

# (StrOpt) A short prefix to prepend to the VLAN number when creating a
# provider VLAN interface. For example, if an interface is being created
# for provider VLAN 3003 it will be named 'p-3003' using the default prefix.
# The total length allowed for the prefix name and VLAN is 32 characters,
# the prefix will be truncated if the total length is greater than 32.
#
# provider_vlan_name_prefix = p-
# Example: provider_vlan_name_prefix = PV-

# (BoolOpt) A flag indicating whether OpenStack networking should manage the
# creation and removal of VLANs for provider networks on the Nexus
# switches. If the flag is set to False then OpenStack will not create or
# remove VLANs for provider networks, and the administrator needs to
# manage these interfaces manually or by external orchestration.
#
# provider_vlan_auto_create = True

# (BoolOpt) A flag indicating whether OpenStack networking should manage
# the adding and removing of provider VLANs from trunk ports on the Nexus
# switches. If the flag is set to False then OpenStack will not add or
# remove provider VLANs from trunk ports, and the administrator needs to
# manage these operations manually or by external orchestration.
#
# provider_vlan_auto_trunk = True

# (BoolOpt) A flag indicating whether OpenStack networking should manage the
# creating and removing of the Nexus switch VXLAN global settings of 'feature
# nv overlay', 'feature vn-segment-vlan-based', 'interface nve 1' and the NVE
# subcommand 'source-interface loopback #'. If the flag is set to False
# (default) then OpenStack will not add or remove these VXLAN settings, and
# the administrator needs to manage these operations manually or by  external
# orchestration.
#
# vxlan_global_config = True

# (BoolOpt) To make Nexus device persistent by running the Nexus
# CLI 'copy run start' after applying successful configurations.
# (default) This flag defaults to False keep consistent with
# existing functionality.
# This will be deprecated along with nexus_driver since this is
# associated to the ncclient driver which is going away.
#
# persistent_switch_config = False

# (BoolOpt) Prevent caching ssh connections to a Nexus switch.
# Set this to True when there are multiple neutron controllers
# and/or when there may be non-neutron ssh connections to the
# same Nexus device. Nexus devices have a limit of 8 such
# connections. When a single neutron controller has more than
# 8 processes, caching is automatically disabled without
# regard to this option.
# (default) This flag defaults to False which indicates that ssh
# connections to a Nexus switch are cached when the neutron
# controller has fewer than 8 processes.
# This will be deprecated along with nexus_driver since this is
# associated to the ncclient driver which is going away.
#
# never_cache_ssh_connection = False

# (IntOpt) Time interval to check the state of the Nexus device.
# (default) This value defaults to 0 seconds which disables this
# functionality.  When enabled, 30 seconds is suggested.
#
# switch_heartbeat_time = 0

[ml2_type_nexus_vxlan]
# (ListOpt) Comma-separated list of <vni_min>:<vni_max> tuples enumerating
# ranges of VXLAN Network IDs that are available for tenant network allocation.
#
# vni_ranges =
# Example: 100:1000,2000:6000
#
# (ListOpt) Multicast groups for the VXLAN interface. When configured, will
# enable sending all broadcast traffic to this multicast group. Comma separated
# list of min:max ranges of multicast IP's.
# NOTE: must be a valid multicast IP, invalid IP's will be discarded
#
# mcast_ranges =
# Example: mcast_ranges = 224.0.0.1:224.0.0.3,224.0.1.1:224.0.1.

[ml2_cisco_n1kv]

# (StrOpt) Name of the policy profile to be associated with a port when no
# policy profile is specified during port creates.
# default_policy_profile = default-pp

# (IntOpt) Time in seconds for which the plugin polls the VSM for updates in
# policy profiles.
# poll_duration = 60

# (IntOpt) Timeout duration in seconds for the http request
# http_timeout = 15

# (IntOpt) Time duration in seconds between consecutive neutron-VSM syncs
# sync_interval = 300

# (BoolOpt) Specify whether tenants are restricted from accessing all the
# policy profiles.
# Default value: False, indicating all tenants can access all policy profiles.
#
# restrict_policy_profiles = False

# Describe Cisco N1KV VSM connectivity
# In this section you can specify connectivity details in order for plugin
# to connect to N1KV Virtual Supervisor Module (VSM).
#
# n1kv_vsm_ips =<vsm1_ip>,<vsm2_ip>,....
# username = <username>
# password = <password>
#
# An example would be:
# n1kv_vsm_ips = 1.1.1.1,1.1.1.2
# username = user
# password = password

# (IntOpt) Maximum number of retry attempts for VSM REST API.
# max_vsm_retries = 2

# (BoolOpt) Specify whether tenants are restricted from accessing all the
# network profiles.
# Default value: False, indicating all tenants can access all network profiles.
#
# restrict_network_profiles = False

[ml2_cisco_ucsm]

# Configuration for Single UCSM Support
# Cisco UCS Manager IP address
# ucsm_ip=1.1.1.1

# Username to connect to UCS Manager
# ucsm_username=user

# Password to connect to UCS Manager
# ucsm_password=password

# Hostname to Service profile mapping for UCS Manager
# controlled compute hosts
# ucsm_host_list=Hostname1:Serviceprofile1, Hostname2:Serviceprofile2

# SR-IOV and VM-FEX vendors supported by this plugin
# xxxx:yyyy represents vendor_id:product_id
# This config is optional.
# supported_pci_devs=['2222:3333', '4444:5555']

# Ethernet port names to be used for virtio ports
# ucsm_virtio_eth_ports = eth0, eth1

# UCSM information for multi-UCSM support.
# The following section can be repeated for the number of UCS Managers in
# the cloud.
# UCSM information format:
# [ml2_cisco_ucsm_ip:1.1.1.1]
# ucsm_username = username
# ucsm_password = password
# ucsm_virtio_eth_ports = eth0, eth1

# Hostname to Service Profile mapping for Compute hosts managed by
# this UCS Manager. This config should be specified for hosts configured
# with only Service Profiles and not Service Profile Templates.
# ucsm_host_list=Hostname1:Serviceprofile1, Hostname2:Serviceprofile2

# Service Profile Template config per UCSM. This is a mapping of Service Profile
# Template to the list of UCS Servers controlled by this template.
# sp_template_list = SP_Template1_path:SP_Template1:S1,S2 SP_Template2_path:SP_Template2:S3,S4

# VNIC Profile Template config per UCSM.
# vnic_template_list = physnet1:vnic_template_path1:vt11,vt12 physnet2:vnic_template_path2:vt21,vt22

# Pre-defined QoS policy name
# sriov_qos_policy=Test

# SR-IOV Multi-VLAN trunk config section
# [sriov_multivlan_trunk]
# Neutron network name=<comma seperated list of VLAN-ids or VLAN-id ranges>
# For example:
# test_network1=5,7-9
# test_network2=500,701 - 709
